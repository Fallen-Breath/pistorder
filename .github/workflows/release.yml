name: Release

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      target_release_tag:
        description: The tag of the release you want to append the artifact to
        required: true


jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: 'Display current branch/tag name'
        run: echo ${{ github.ref_name }}

      - id: setmatrix
        uses: JoshuaTheMiller/conditional-build-matrix@0.0.1
        with:
          # inputFile: '.github/workflows/matrix_includes.json' # Default input file path
          filter: '[? `${{ github.event_name }}` == `release` || `${{ github.ref_name }}` == branch]'

      - name: 'Print matrix'
        run: echo ${{ steps.setmatrix.outputs.matrix }}

  release:
    needs: matrix_prep
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Download libs for rift
        run: |
          wget https://files.catbox.moe/okoxws.zip -O rift_libs.zip
          unzip rift_libs.zip

      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle', 'gradle.properties', '**/*.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: |
          ./gradlew setupDecompWorkspace
          ./gradlew build

      - name: Upload to action artifact
        uses: actions/upload-artifact@v2
        with:
          name: '[${{ matrix.branch }}] build-artifacts'
          path: build/libs/

      - name: Get github release information
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: get_release
        uses: cardinalby/git-get-release-action@v1.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ github.event.inputs.target_release_tag }}

      - name: Generate publish related infomation
        id: release_info
        run: |
          if [ $GITHUB_EVENT_NAME == 'release' ]
          then
              echo "::set-output name=tag_name::"  # leave an empty value here so softprops/action-gh-release will use the default value
          elif [ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]
          then
              echo "::set-output name=tag_name::${{ github.event.inputs.target_release_tag }}"
          else
              echo Unknown github event name $GITHUB_EVENT_NAME
              exit 1
          fi

      - name: Read Properties mod_version
        id: mod_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: gradle.properties
          property: mod_version

      - name: Read Properties minecraft_version
        id: minecraft_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: gradle.properties
          property: minecraft_version

      - name: Publish Minecraft Mods
        uses: Kir-Antipov/mc-publish@v2.1
        with:
          modrinth-id: lpin1bEg  # https://modrinth.com/mod/pistorder
          modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}

          curseforge-id: 430118  # https://www.curseforge.com/minecraft/mc-mods/pistorder
          curseforge-token: ${{ secrets.CF_API_TOKEN }}

          github-tag: ${{ steps.release_info.outputs.tag_name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

          files-primary: build/libs/!(*-@(dev|sources)).jar
          files-secondary: ''

          name: ${{ format('Pistorder v{0} for mc{1}', steps.mod_version.outputs.value, steps.minecraft_version.outputs.value) }}
          version: ${{ format('mc{0}-v{1}', steps.minecraft_version.outputs.value, steps.mod_version.outputs.value) }}
          version-type: release
          changelog: ${{ format('{0}{1}', github.event.release.body, steps.get_release.outputs.body) }}  # one of them should be an empty string (null)

          loaders: fabric
          game-versions: ${{ matrix.game_versions }}
          dependencies: ''
          version-resolver: exact

          retry-attempts: 3
          retry-delay: 10000
